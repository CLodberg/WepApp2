{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\troll\\\\OneDrive\\\\Dokumenter\\\\Erhvervsakademiet\\\\Projekter\\\\WebApp\\\\WepApp2\\\\src\\\\pages\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { tasksRef } from \"../firebase-config\";\nimport { onSnapshot, query, orderBy } from \"@firebase/firestore\"; //realtime updates. Snakker sammen med en constant -\n\nimport { useState, useEffect } from \"react\";\nimport PostCard from \"../components/PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const [tasks, setTasks] = useState([]); //gemmer alt data i et state\n\n  useEffect(() => {\n    const q = query(tasksRef, orderBy(\"createdAt\", \"desc\")); // order by: lastest post first\n\n    const unsubscribe = onSnapshot(q, data => {\n      //referer til quary i stedet for postsRef, fordi så kommer den med filterede resultater. unsub gør at man kan kigge på komponenterne, selvom man ikke er på samme side.\n      const tasksData = data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        }; //henter alt data fra firebase (...doc.data) og sammen med id: doc.id - skriver id'et fra brugeren.\n      });\n      setTasks(tasksData);\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HomePage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid-container\",\n      children: tasks.map((task //til at kigge på array\n      ) => /*#__PURE__*/_jsxDEV(PostCard, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this) //\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/troll/OneDrive/Dokumenter/Erhvervsakademiet/Projekter/WebApp/WepApp2/src/pages/HomePage.js"],"names":["tasksRef","onSnapshot","query","orderBy","useState","useEffect","PostCard","HomePage","tasks","setTasks","q","unsubscribe","data","tasksData","docs","map","doc","id","task"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,OAA5B,QAA2C,qBAA3C,C,CAAkE;;AAClE,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CADiC,CACO;;AAExCC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,CAAC,GAAGR,KAAK,CAACF,QAAD,EAAWG,OAAO,CAAC,WAAD,EAAc,MAAd,CAAlB,CAAf,CADc,CAC2C;;AACzD,UAAMQ,WAAW,GAAGV,UAAU,CAACS,CAAD,EAAKE,IAAD,IAAU;AAC1C;AACA,YAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAeC,GAAD,IAAS;AACvC,eAAO,EAAE,GAAGA,GAAG,CAACJ,IAAJ,EAAL;AAAiBK,UAAAA,EAAE,EAAED,GAAG,CAACC;AAAzB,SAAP,CADuC,CACD;AACvC,OAFiB,CAAlB;AAGAR,MAAAA,QAAQ,CAACI,SAAD,CAAR;AACD,KAN6B,CAA9B;AAOA,WAAO,MAAMF,WAAW,EAAxB;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAS,MAAA,SAAS,EAAC,gBAAnB;AAAA,gBACGH,KAAK,CAACO,GAAN,CACC,CACEG,IADF,CACO;AADP,wBAGE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACD,EAAhC;AAAA;AAAA;AAAA;AAAA,cAHF,CAGyC;AAJ1C;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7BuBV,Q;;KAAAA,Q","sourcesContent":["import { tasksRef } from \"../firebase-config\";\r\nimport { onSnapshot, query, orderBy } from \"@firebase/firestore\"; //realtime updates. Snakker sammen med en constant -\r\nimport { useState, useEffect } from \"react\";\r\nimport PostCard from \"../components/PostCard\";\r\n\r\nexport default function HomePage() {\r\n  const [tasks, setTasks] = useState([]); //gemmer alt data i et state\r\n\r\n  useEffect(() => {\r\n    const q = query(tasksRef, orderBy(\"createdAt\", \"desc\")); // order by: lastest post first\r\n    const unsubscribe = onSnapshot(q, (data) => {\r\n      //referer til quary i stedet for postsRef, fordi så kommer den med filterede resultater. unsub gør at man kan kigge på komponenterne, selvom man ikke er på samme side.\r\n      const tasksData = data.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id }; //henter alt data fra firebase (...doc.data) og sammen med id: doc.id - skriver id'et fra brugeren.\r\n      });\r\n      setTasks(tasksData);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"page\">\r\n      <h1>HomePage</h1>\r\n      <section className=\"grid-container\">\r\n        {tasks.map(\r\n          (\r\n            task //til at kigge på array\r\n          ) => (\r\n            <PostCard task={task} key={task.id} /> //\r\n          )\r\n        )}\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}